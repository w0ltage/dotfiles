# based on 
# https://github.com/damntrain/dots/blob/master/.config/tmux/tmux.conf

# Plugins autoload, load like this  "run-shell path/to/plugin-file.tmux"

# Default shell
set-option -g mouse on
set-option -g base-index 1
set-option -g set-titles on
set-option -g pane-base-index 1
set-option -s escape-time 0
set-option -g focus-events on
set-option -g display-time 3000
set-option -g aggressive-resize on
set-option -g history-limit 10000
set-option -w -g main-pane-width 90
set-option -g default-terminal 'xterm-256color'
set-window-option -g mode-keys vi

set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# Statusbar-tweaking
white=#ddd4c8
red=#b5514f
black=#1c1c1c
set -g status-position top
set -g status-justify right
set -g status-style bg=$white
set -g status-fg $white
set -g status-bg $black
set -g status-interval 5
set -g status-right-length 10
setw -g window-status-separator "  "

# Some other coloring
# Colors for overview and tmux-messages/tmux-enter-the-command prompt
set-window-option -g mode-style bg=$red,fg=$black
set -g message-style bg=terminal,fg=$white
# Colors for items in statusbar
setw -g window-status-format "#[fg=$black,bg=$white] #I #[fg=$black,bg=$white]#W "
setw -g window-status-current-format "#[bg=$red,fg=$black,bold] #I #[fg=$black,bg=$red,nobold]#W "
set -g status-justify left
set -g status-right '#[bg=$red,fg=terminal]#{?client_prefix,  •  ,}'
set-option -g status-left ' '

# Set title for actual red-emulator
set -g set-titles-string "#W"

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set -g status-bg $black
%endif

# Set bell/ring enabled
set-window-option -g visual-bell off
set-window-option -g bell-action any

# Don't keep windows around after they exit
set -g remain-on-exit off	

# Count windows from 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows when some closes
set -g renumber-windows on

# Pane-border-tweaking
# PWD at the top
# set-window-option -g pane-border-status top
# set-window-option -g pane-border-format "#[align=left]#[fg=dim]─ #{s|$HOME|~|:pane_current_path} ─"
# Pane-border colors
set -g pane-active-border-style fg=terminal,bold
set -g pane-border-style fg=$white,dim,overline

# Change the prefix key to Ctrl-w
unbind-key %
unbind-key p
unbind-key [
unbind-key '"'
unbind-key C-b
unbind-key -T copy-mode-vi MouseDragEnd1Pane

set -g prefix C-a
bind-key C-a send-prefix

# bind-key | split-window -h -c '#{pane_current_path}'
bind-key = split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'
# bind-key _ split-window -v -c '#{pane_current_path}'

bind-key i copy-mode
bind-key Escape copy-mode
bind-key p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -sel clip >/dev/null"
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up


bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"

set -sg escape-time 0


# pane switching
#bind-key -n C-h select-pane -L
#bind-key -n C-j select-pane -D
#bind-key -n C-k select-pane -U
#bind-key -n C-l select-pane -R
#bind-key -n C-\ select-pane -l

# extra binds
bind-key e command-prompt -p "Rename window to:" "rename-window '%%'"
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'
bind-key tab last-window

bind-key r source-file $HOME/.config/tmux/tmux.conf \; display "Config Reloaded!"

# Create a single default session - because a session is created here, tmux
# should be started with "tmux attach" rather than "tmux new"
# new -d -s $USER
